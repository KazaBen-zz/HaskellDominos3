getPossibleEnemyHand [(0,2), (2,3), (2,6), (4,3), (1,1)] domSet
[(6,6),(6,5),(6,4),(6,3),(6,1),(6,0),(5,5),(5,4),(5,3),(5,2),(5,1),(5,0),(4,4),(4,2),(4,1),(4,0),(3,3),(3,1),(3,0),(2,2),(2,1),(1,0),(0,0)]

put54 [(1,2),(3,4),(4,5),(2,6)] InitBoard P1 (0,0)
Just ((5,4),L)


startGame [(1,2),(3,4),(4,5),(2,6)] InitBoard P1 (0,0)
Just ((5,4),L)

-- Can't put (4,5) so puts highest scoring
startGame [(1,2),(3,4),(2,6),(5,5),(6,6)] InitBoard P1 (0,0) 
Just ((6,6),L)

whatDotsHandDoesntHave [(2,2)]
[True,True,False,True,True,True,True]

whatDotsHandDoesntHave [(0,3),(2,5),(1,1),(4,4)]
[False,False,False,False,False,False,True]

isDotValueInHand [(0,3),(2,5),(1,1),(4,4)] 6
False

isDotValueInHand [(0,3),(2,5),(1,1),(4,4)] 2
True

doIHaveThisDomino (1,3) [(5,2),(6,4),(3,2),(2,2)]
False

doIHaveThisDomino (1,3) [(5,2),(6,4),(3,1),(2,2)]
True

isSameDom (0,3) (3,0)
True

isSameDom (0,3) (3,1)
False


isntNothing Nothing
False

isntNothing (Just (5,3))
True

-- Testing InitBoard, enemy doms can be anything what I dont have.
getPossibleEnemyDominoes [(1,2),(3,4),(5,5),(2,6),(6,6),(3,6)] InitBoard P1
[(6,5),(6,4),(6,1),(6,0),(5,4),(5,3),(5,2),(5,1),(5,0),(4,4),(4,2),(4,1),(4,0),(3,3),(3,2),(3,1),(3,0),(2,2),(2,0),(1,1),(1,0),(0,0)]

getPossibleEnemyDominoes [(4,2),(6,6)] (Board (1,2) (0,6) [((1,2),P2,15),((2,3),P2,13),((3,0),P2,11),((0,0),P2,9),((0,4),P1,8),((4,1),P2,1),((1,5),P1,2),((5,2),P2,3),((2,0),P1,4),((0,1),P2,5),((1,6),P1,6),((6,5),P2,7),((5,5),P1,10),((5,0),P1,12),((0,6),P1,14)]) P1
[(6,4),(6,3),(6,2),(5,4),(5,3),(4,4),(4,3),(3,3),(3,1),(2,2),(1,1)]

-- Enemy was knocking after first move(he didnt have 4 or 1). Hand is made -> Removed all 4 or 1, removed everything whats on the board, removed everything what is in my hand
getPossibleEnemyDominoes [(4,2),(6,6)] (Board (1,2) (0,6) [((4,1),P1,1),((1,5),P1,2),((5,2),P2,3),((2,0),P1,4),((0,1),P2,5),((1,6),P1,6),((6,5),P2,7)]) P1
[(6,3),(6,2),(6,0),(5,5),(5,3),(5,0),(3,3),(3,2),(3,0),(2,2),(0,0)]


makeEnemyKnock [(4,2),(5,3)] (Board (1,1) (6,5) [((1,3),P1,1),((3,5),P1,2),((5,2),P2,3),((2,0),P1,4),((0,1),P2,5),((1,6),P1,6),((6,5),P2,7)]) P1
Just ((5,3),R)

findWhatEnemyWasKnockingOn [((1,3),P1,1),((3,5),P1,2),((5,2),P2,3),((2,0),P1,4),((0,1),P2,5),((1,6),P1,6),((6,5),P2,7)] P1
Just [1]

findWhatEnemyWasKnockingOn [((1,3),P1,1),((3,5),P1,2),((5,2),P1,3),((2,0),P1,4),((0,1),P2,5),((1,6),P1,6),((6,5),P2,7)] P1
Just [1,2,3]

findWhatEnemyWasKnockingOn [((1,3),P1,1),((3,5),P2,2),((5,2),P1,3),((2,0),P2,4),((0,1),P2,5),((1,6),P1,6),((6,5),P2,7)] P1
Nothing

-- P1 Was knocking but not P2
findWhatEnemyWasKnockingOn [((1,3),P1,1),((3,5),P2,2),((5,2),P1,3),((2,0),P2,4),((0,1),P2,5),((1,6),P2,6),((6,5),P2,7)] P1
Nothing

constructBoardOnMoveNum [((5,1),P2,8),((1,3),P1,1),((3,5),P2,2),((5,2),P1,3),((2,0),P2,4),((0,1),P2,5),((1,6),P2,6),((6,5),P2,7)] 1
[(1,3)]

constructBoardOnMoveNum [((5,1),P2,8),((1,3),P1,1),((3,5),P2,2),((5,2),P1,3),((2,0),P2,4),((0,1),P2,5),((1,6),P2,6),((6,5),P2,7)] 3
[(1,3),(3,5),(5,2)]

constructBoardOnMoveNum [((1,3),P1,1),((3,5),P2,2)] 0
[]

findDomsEnemyDoesntHave (Board (1,1) (6,5) [((1,3),P1,1),((3,5),P1,2),((5,2),P2,3),((2,0),P1,4),((0,1),P2,5),((1,6),P1,6),((6,5),P2,7)]) P1
Just [1,3]

 whatDominosIDontHave [(3,4),(3,3),(2,6),(6,6)] domSet
[(6,5),(6,4),(6,3),(6,1),(6,0),(5,5),(5,4),(5,3),(5,2),(5,1),(5,0),(4,4),(4,2),(4,1),(4,0),(3,2),(3,1),(3,0),(2,2),(2,1),(2,0),(1,1),(1,0),(0,0)]

removeFromHandWhatEnemyDoesntHave [(3,2),(4,5),(6,6),(1,2)] [1,3]
[(4,5),(6,6)]

domExistsInHistory (5,3) [((1,3),P1,1),((3,5),P2,2),((5,2),P1,3),((2,0),P2,4),((0,1),P2,5),((1,6),P2,6),((6,5),P2,7)]
True

domExistsInHistory (1,4) [((1,3),P1,1),((3,5),P2,2),((5,2),P1,3),((2,0),P2,4),((0,1),P2,5),((1,6),P2,6),((6,5),P2,7)]
False
